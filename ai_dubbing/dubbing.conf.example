# SRT配音工具配置文件
# 复制此文件并根据实际需求修改参数

[基本配置]
# 输入文件路径（SRT或TXT，必须指定）
input_file = /path/to/input.srt

# 参考语音文件路径（支持 wav/mp3，支持多个，用逗号分隔）
# 单个文件示例：
# voice_files = /path/to/reference.wav
# 多个文件示例：
voice_files = /path/to/reference1.wav, /path/to/reference2.wav

# 参考音频对应的文本（与voice_files一一对应，用双引号包围，逗号分隔）
# 单个文本示例：
# prompt_texts = "这是参考音频的文本"
# 多个文本示例：
prompt_texts = "这是第一段参考音频的文本", "这是第二段参考音频的文本，可以包含逗号、分号等特殊字符"

# 输出音频文件路径（默认：output.wav）
output_file = /path/to/output.wav

# TTS引擎选择：fish_speech, index_tts, index_tts2, f5_tts, cosy_voice
tts_engine = fish_speech

# 时间同步策略：stretch, basic
# 注意：TXT文件模式下系统会自动使用basic策略
strategy = stretch

[高级配置]
# 语言设置：zh, en, ja, ko（TXT模式专用）
language = zh

[并发配置]
# 策略并行合成：最大并发、最大重试
tts_max_concurrency = 2
tts_max_retries = 2

[字幕优化配置]
llm_api_key = sk-xxxxxxxxxxxxxxxxxx
llm_model = deepseek-chat
base_url = https://api.deepseek.com
#单位毫秒
chinese_char_min_time = 150
english_word_min_time = 250

# LLM并发与稳定性配置
# 最大并发请求数（根据供应商限流适当调整）
llm_max_concurrency = 50
# 失败重试次数（指数退避）
llm_max_retries = 3
# 单请求超时（秒）
llm_timeout = 60

# 优化后的SRT文件输出路径（可选，默认在输入文件同目录）
optimized_srt_output_file = /path/to/input_optimized.srt

[时间借用配置]
# 最小保护空隙（毫秒），小于此值的空隙不借用
min_gap_threshold = 200
# 借用比例（0.1-1），从可用空隙中借用的比例
borrow_ratio = 1
# 额外缓冲时间（毫秒），在计算需要延长时间时的安全余量
extra_buffer = 200

[IndexTTS2情感控制]
# IndexTTS2专用情感控制配置 (仅当tts_engine=index_tts2时生效)
# 情感控制模式：auto(自动检测), audio(音频引导), vector(向量控制), text(文本描述)
emotion_mode = auto

# 情感音频文件路径 (emotion_mode=audio时使用)
# 指定一个包含目标情感的音频文件，用于引导情感表达
# emotion_audio_file = /path/to/emotional_reference.wav

# 情感向量 (emotion_mode=vector时使用)
# 8个浮点数，分别对应：开心,愤怒,悲伤,恐惧,厌恶,忧郁,惊讶,平静
# 数值范围0.0-1.0，可以组合使用（如开心+惊讶）
# emotion_vector = 0.5,0,0,0,0,0,0.8,0

# 情感描述文本 (emotion_mode=text时使用)
# 用自然语言描述期望的情感表达效果
# emotion_text = 很开心很惊讶的语气

# 情感强度控制 (0.0-1.0)
# 控制情感表达的强烈程度，建议0.6-0.8，1.0为最强烈
emotion_alpha = 0.8

# 是否使用随机采样 (true/false)
# 启用可增加语音多样性，但可能影响语音克隆的准确度
use_random = false

