1
00:00:00,000 --> 00:00:01,520
过去几周，我已经

2
00:00:01,760 --> 00:00:04,300
从Cursor的Agent切换到了Cloud Code

3
00:00:04,579 --> 00:00:05,840
而且我完全不打算回头。

4
00:00:06,079 --> 00:00:08,119
下面我将介绍如何使用Cloud Code以及我的最佳技巧。

5
00:00:08,380 --> 00:00:09,880
首先，我安装了这个扩展。

6
00:00:10,300 --> 00:00:11,920
它适用于VS Code、Cursor

7
00:00:12,020 --> 00:00:13,640
可能也适用于其他分支如Windsurf。

8
00:00:13,800 --> 00:00:14,640
它功能不多，

9
00:00:14,859 --> 00:00:17,840
但能让你在IDE中轻松启动Cloud Code。

10
00:00:18,280 --> 00:00:19,559
我默认仍使用Cursor，

11
00:00:19,840 --> 00:00:20,780
因为偶尔

12
00:00:20,780 --> 00:00:23,079
使用Command-K和它们的标签补全功能很不错

13
00:00:23,420 --> 00:00:25,299
但我唯一打开Agent侧边栏的时候

14
00:00:25,299 --> 00:00:26,379
是Cloud服务宕机时

15
00:00:26,379 --> 00:00:28,180
这个扩展真正的作用是

16
00:00:28,180 --> 00:00:30,000
让你轻松打开Cloud Code。

17
00:00:30,280 --> 00:00:32,500
我经常同时开多个窗格，

18
00:00:32,599 --> 00:00:33,799
这样我就可以并行运行任务。

19
00:00:33,799 --> 00:00:35,819
只要它们处理的是代码库的不同部分

20
00:00:35,819 --> 00:00:36,520
和不同的文件。

21
00:00:36,819 --> 00:00:38,040
如果我打开了一个文件，

22
00:00:38,180 --> 00:00:40,119
它会自动将其拉入上下文。

23
00:00:40,560 --> 00:00:41,979
现在Cloud使用的是终端用户界面。

24
00:00:42,119 --> 00:00:43,880
起初我对此非常犹豫，

25
00:00:44,220 --> 00:00:46,099
但他们实际上做得非常好。

26
00:00:46,259 --> 00:00:49,020
你可以轻松标记文件并选择要包含的内容。

27
00:00:49,299 --> 00:00:50,880
他们有斜杠命令，这很棒。

28
00:00:51,340 --> 00:00:53,040
说到这个，我经常使用模型命令。

29
00:00:53,040 --> 00:00:54,720
并且通常使用Opus模型。

30
00:00:54,720 --> 00:00:56,939
除非Opus出现问题（这确实会发生），

31
00:00:57,259 --> 00:00:58,020
然后切换到Sonnet模型。

32
00:00:58,319 --> 00:01:00,119
很多人可能只需使用默认设置。

33
00:01:00,419 --> 00:01:03,240
它会使用Opus直到你的使用量达到限制的50%，

34
00:01:03,240 --> 00:01:05,440
然后切换到Sonnet，这更具成本效益。

35
00:01:05,800 --> 00:01:07,080
我发现Opus并不慢，

36
00:01:07,199 --> 00:01:10,139
不像3.5与Sonnet相比那样（至少感觉不明显）。

37
00:01:10,459 --> 00:01:11,519
两种模型都非常好，

38
00:01:11,620 --> 00:01:13,040
但Opus只是略胜一筹。

