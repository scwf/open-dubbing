#!/bin/bash
set -e

# --- Configuration ---
CONDA_ENV_NAME="index-tts"
PYTHON_VERSION="3.10"
INDEX_TTS_REPO="https://github.com/index-tts/index-tts.git"
INDEX_TTS_MODEL="IndexTeam/IndexTTS-1.5"
DEPS_DIR="deps"
INDEX_TTS_DIR="${DEPS_DIR}/index-tts"
MODEL_CACHE_DIR="models"
MODEL_DIR="${MODEL_CACHE_DIR}/index_tts"

# Get the absolute path of the project directory
PROJECT_DIR=$(pwd)

# --- Helper Functions ---
print_info() {
    echo " "
    echo "======================================================================="
    echo "=> $1"
    echo "======================================================================="
    echo " "
}

# --- Main Script ---

# 1. Check for Conda
if ! command -v conda &> /dev/null; then
    echo "Error: Conda is not installed or not in your PATH. Please install Conda first."
    exit 1
fi

# 2. Create and Activate Conda Environment
print_info "Setting up Conda environment: ${CONDA_ENV_NAME}"
if ! conda env list | grep -q "${CONDA_ENV_NAME}"; then
    conda create -n "${CONDA_ENV_NAME}" python=${PYTHON_VERSION} -y
fi

# Activate the environment for the rest of the script
source "$(conda info --base)/etc/profile.d/conda.sh"
conda activate "${CONDA_ENV_NAME}"

# 3. Install Dependencies
print_info "Installing dependencies..."
conda install -c conda-forge ffmpeg -y
pip install -r requirements.txt
pip install torch torchaudio --index-url https://download.pytorch.org/whl/cu118
pip install huggingface-hub

# 4. Clone and Install IndexTTS
print_info "Cloning and installing IndexTTS engine..."
mkdir -p "${DEPS_DIR}"
if [ -d "${INDEX_TTS_DIR}" ]; then
    echo "IndexTTS directory already exists. Skipping clone."
else
    git clone "${INDEX_TTS_REPO}" "${INDEX_TTS_DIR}"
fi
cd "${INDEX_TTS_DIR}"
pip install -e .
cd "${PROJECT_DIR}"

# 5. Create .env file
print_info "Creating .env configuration file..."
mkdir -p ai_dubbing
ENV_FILE="ai_dubbing/.env"
if [ -f "$ENV_FILE" ]; then
    echo ".env file already exists. Updating IndexTTS configuration..."
    # Update existing .env file with IndexTTS config
    if grep -q "INDEX_TTS_DIR" "$ENV_FILE"; then
        sed -i "s|INDEX_TTS_DIR=.*|INDEX_TTS_DIR=${PROJECT_DIR}/${INDEX_TTS_DIR}|" "$ENV_FILE"
    else
        echo "INDEX_TTS_DIR=${PROJECT_DIR}/${INDEX_TTS_DIR}" >> "$ENV_FILE"
    fi
    if grep -q "MODEL_CACHE_DIR" "$ENV_FILE"; then
        sed -i "s|MODEL_CACHE_DIR=.*|MODEL_CACHE_DIR=${PROJECT_DIR}/${MODEL_CACHE_DIR}|" "$ENV_FILE"
    else
        echo "MODEL_CACHE_DIR=${PROJECT_DIR}/${MODEL_CACHE_DIR}" >> "$ENV_FILE"
    fi
else
    echo "# Auto-generated by install-index-tts.sh" > "${ENV_FILE}"
    echo "MODEL_CACHE_DIR=${PROJECT_DIR}/${MODEL_CACHE_DIR}" >> "${ENV_FILE}"
    echo "INDEX_TTS_DIR=${PROJECT_DIR}/${INDEX_TTS_DIR}" >> "${ENV_FILE}"
    echo ".env file created at ${ENV_FILE}"
fi

# 6. Download Model
print_info "Downloading IndexTTS model..."
if [ -d "${MODEL_DIR}" ]; then
    echo "Model directory already exists. Skipping download."
else
    huggingface-cli download "${INDEX_TTS_MODEL}" \
        config.yaml bigvgan_discriminator.pth bigvgan_generator.pth \
        bpe.model dvae.pth gpt.pth unigram_12000.vocab \
        --local-dir "${MODEL_DIR}"
fi

# 7. Installation Complete
print_info "IndexTTS installation completed successfully!"
echo " "
echo "To start the Web UI server with IndexTTS engine, run:"
echo "  conda activate ${CONDA_ENV_NAME}"
echo "  python server.py"
echo " "
echo "Make sure to set 'tts_engine = index_tts' in your configuration."
echo " "
