#!/bin/bash
set -e

# --- Configuration ---
CONDA_ENV_NAME="cosyvoice"
PYTHON_VERSION="3.10"
COSYVOICE_REPO="https://github.com/FunAudioLLM/CosyVoice.git"
DEPS_DIR="deps"
COSYVOICE_DIR="${DEPS_DIR}/CosyVoice"
MODEL_CACHE_DIR="models"

# Get the absolute path of the project directory
PROJECT_DIR=$(pwd)

# --- Helper Functions ---
print_info() {
    echo " "
    echo "======================================================================="
    echo "=> $1"
    echo "======================================================================="
    echo " "
}

# --- Main Script ---

# 1. Check for Conda
if ! command -v conda &> /dev/null; then
    echo "Error: Conda is not installed or not in your PATH. Please install Conda first."
    exit 1
fi

# 2. Create and Activate Conda Environment
print_info "Setting up Conda environment: ${CONDA_ENV_NAME}"
if ! conda env list | grep -q "${CONDA_ENV_NAME}"; then
    conda create -n "${CONDA_ENV_NAME}" python=${PYTHON_VERSION} -y
fi

# Activate the environment for the rest of the script
source "$(conda info --base)/etc/profile.d/conda.sh"
conda activate "${CONDA_ENV_NAME}"

# 3. Install Dependencies
print_info "Installing dependencies..."
conda install -c conda-forge ffmpeg -y
pip install -r requirements.txt
pip install torch torchaudio --index-url https://download.pytorch.org/whl/cu118

# 4. Clone and Install CosyVoice
print_info "Cloning and installing CosyVoice engine..."
mkdir -p "${DEPS_DIR}"
if [ -d "${COSYVOICE_DIR}" ]; then
    echo "CosyVoice directory already exists. Skipping clone."
else
    git clone --recursive "${COSYVOICE_REPO}" "${COSYVOICE_DIR}"
fi
cd "${COSYVOICE_DIR}"
pip install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/
cd "${PROJECT_DIR}"

# 5. Create .env file
print_info "Creating .env configuration file..."
mkdir -p ai_dubbing
ENV_FILE="ai_dubbing/.env"
if [ -f "$ENV_FILE" ]; then
    echo ".env file already exists. Updating CosyVoice configuration..."
    # Update existing .env file with CosyVoice config
    if grep -q "COSYVOICE_DIR" "$ENV_FILE"; then
        sed -i "s|COSYVOICE_DIR=.*|COSYVOICE_DIR=${PROJECT_DIR}/${COSYVOICE_DIR}|" "$ENV_FILE"
    else
        echo "COSYVOICE_DIR=${PROJECT_DIR}/${COSYVOICE_DIR}" >> "$ENV_FILE"
    fi
    if grep -q "MODEL_CACHE_DIR" "$ENV_FILE"; then
        sed -i "s|MODEL_CACHE_DIR=.*|MODEL_CACHE_DIR=${PROJECT_DIR}/${MODEL_CACHE_DIR}|" "$ENV_FILE"
    else
        echo "MODEL_CACHE_DIR=${PROJECT_DIR}/${MODEL_CACHE_DIR}" >> "$ENV_FILE"
    fi
else
    echo "# Auto-generated by install-cosyvoice.sh" > "${ENV_FILE}"
    echo "MODEL_CACHE_DIR=${PROJECT_DIR}/${MODEL_CACHE_DIR}" >> "${ENV_FILE}"
    echo "COSYVOICE_DIR=${PROJECT_DIR}/${COSYVOICE_DIR}" >> "${ENV_FILE}"
    echo ".env file created at ${ENV_FILE}"
fi

# 6. Install modelscope for model downloading
print_info "Installing modelscope for model management..."
pip install modelscope

# 7. Download Models
print_info "Downloading CosyVoice models..."
python -c "
try:
    from modelscope import snapshot_download
    import os
    
    model_dir = '${PROJECT_DIR}/${MODEL_CACHE_DIR}'
    os.makedirs(model_dir, exist_ok=True)
    
    models = [
        ('iic/CosyVoice2-0.5B', 'cosyvoice-2-0.5b'),
        ('iic/CosyVoice-300M', 'cosyvoice-300m'),
        ('iic/CosyVoice-300M-SFT', 'cosyvoice-300m-sft'),
        ('iic/CosyVoice-300M-Instruct', 'cosyvoice-300m-instruct'),
        ('iic/CosyVoice-ttsfrd', 'cosyvoice-ttsfrd')
    ]
    
    for model_id, local_name in models:
        local_path = os.path.join(model_dir, local_name)
        if not os.path.exists(local_path):
            print(f'Downloading {model_id} to {local_path}...')
            snapshot_download(model_id, local_dir=local_path)
        else:
            print(f'Model {local_name} already exists, skipping download.')
            
    print('All CosyVoice models downloaded successfully!')
except Exception as e:
    print(f'Error downloading models: {e}')
    print('Models will be downloaded automatically on first use.')
"

# 8. Installation Complete
print_info "CosyVoice installation completed successfully!"
echo " "
echo "To start the Web UI server with CosyVoice engine, run:"
echo "  conda activate ${CONDA_ENV_NAME}"
echo "  python server.py"
echo " "
echo "Make sure to set 'tts_engine = cosy_voice' in your configuration."
echo " "
